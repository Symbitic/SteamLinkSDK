diff -burN llvm-3.7.1/cmake/config-ix.cmake llvm-3.7.1-ctr/cmake/config-ix.cmake
--- llvm-3.7.1/cmake/config-ix.cmake	2015-07-02 09:34:57.000000000 -0500
+++ llvm-3.7.1-ctr/cmake/config-ix.cmake	2016-01-10 13:23:25.675752877 -0600
@@ -510,9 +510,11 @@
 endif()
 
 set(LLVM_BINDINGS "")
-if(WIN32)
+
+if(LLVM_ENABLE_BINDINGS)
+  if(WIN32)
   message(STATUS "Go bindings disabled.")
-else()
+  else()
   find_program(GO_EXECUTABLE NAMES go DOC "go executable")
   if(GO_EXECUTABLE STREQUAL "GO_EXECUTABLE-NOTFOUND")
     message(STATUS "Go bindings disabled.")
@@ -526,6 +528,9 @@
       message(STATUS "Go bindings disabled, need at least Go 1.2.")
     endif()
   endif()
+  endif()
+else()
+  message(STATUS "Go bindings disabled.")
 endif()
 
 find_program(GOLD_EXECUTABLE NAMES ${LLVM_DEFAULT_TARGET_TRIPLE}-ld.gold ld.gold ${LLVM_DEFAULT_TARGET_TRIPLE}-ld ld DOC "The gold linker")
@@ -536,11 +541,12 @@
   find_program(LD64_EXECUTABLE NAMES ld DOC "The ld64 linker")
 endif()
 
-include(FindOCaml)
-include(AddOCaml)
-if(WIN32)
+if(LLVM_ENABLE_BINDINGS)
+  include(FindOCaml)
+  include(AddOCaml)
+  if(WIN32)
   message(STATUS "OCaml bindings disabled.")
-else()
+  else()
   find_package(OCaml)
   if( NOT OCAML_FOUND )
     message(STATUS "OCaml bindings disabled.")
@@ -558,6 +564,9 @@
       endif()
     endif()
   endif()
+  endif()
+else()
+  message(STATUS "OCaml bindings disabled.")
 endif()
 
 string(REPLACE " " ";" LLVM_BINDINGS_LIST "${LLVM_BINDINGS}")
diff -burN llvm-3.7.1/CMakeLists.txt llvm-3.7.1-ctr/CMakeLists.txt
--- llvm-3.7.1/CMakeLists.txt	2015-11-16 12:18:25.000000000 -0600
+++ llvm-3.7.1-ctr/CMakeLists.txt	2016-01-10 13:24:04.731578940 -0600
@@ -323,6 +323,8 @@
   "Build the LLVM tools. If OFF, just generate build targets." ON)
 
 option(LLVM_INCLUDE_UTILS "Generate build targets for the LLVM utils." ON)
+option(LLVM_BUILD_UTILS
+  "Build the LLVM utils. If OFF, just generate build targets." ON)
 
 option(LLVM_BUILD_RUNTIME
   "Build the LLVM runtime libraries." ON)
@@ -339,6 +341,8 @@
 option (LLVM_ENABLE_DOXYGEN "Use doxygen to generate llvm API documentation." OFF)
 option (LLVM_ENABLE_SPHINX "Use Sphinx to generate llvm documentation." OFF)
 
+option (LLVM_ENABLE_BINDINGS "Generate language bindings for Go, OCaml, etc." ON)
+
 option (LLVM_BUILD_EXTERNAL_COMPILER_RT
   "Build compiler-rt as an external project." OFF)
 
diff -burN llvm-3.7.1/tools/CMakeLists.txt llvm-3.7.1-ctr/tools/CMakeLists.txt
--- llvm-3.7.1/tools/CMakeLists.txt	2015-07-13 15:30:58.000000000 -0500
+++ llvm-3.7.1-ctr/tools/CMakeLists.txt	2016-01-10 13:26:13.223264854 -0600
@@ -16,7 +16,6 @@
 
 add_llvm_tool_subdirectory(opt)
 add_llvm_tool_subdirectory(llvm-as)
-add_llvm_tool_subdirectory(llvm-dis)
 add_llvm_tool_subdirectory(llvm-mc)
 
 add_llvm_tool_subdirectory(llc)
@@ -29,40 +28,58 @@
 add_llvm_tool_subdirectory(llvm-link)
 add_llvm_tool_subdirectory(lli)
 
-add_llvm_tool_subdirectory(llvm-extract)
-add_llvm_tool_subdirectory(llvm-diff)
-add_llvm_tool_subdirectory(macho-dump)
 add_llvm_tool_subdirectory(llvm-objdump)
 add_llvm_tool_subdirectory(llvm-readobj)
-add_llvm_tool_subdirectory(llvm-rtdyld)
 add_llvm_tool_subdirectory(llvm-dwarfdump)
-add_llvm_tool_subdirectory(dsymutil)
-add_llvm_tool_subdirectory(llvm-cxxdump)
-if( LLVM_USE_INTEL_JITEVENTS )
-  add_llvm_tool_subdirectory(llvm-jitlistener)
-else()
-  ignore_llvm_tool_subdirectory(llvm-jitlistener)
-endif( LLVM_USE_INTEL_JITEVENTS )
-
-add_llvm_tool_subdirectory(bugpoint)
-add_llvm_tool_subdirectory(bugpoint-passes)
-add_llvm_tool_subdirectory(llvm-bcanalyzer)
-add_llvm_tool_subdirectory(llvm-stress)
-add_llvm_tool_subdirectory(llvm-mcmarkup)
-
-add_llvm_tool_subdirectory(verify-uselistorder)
-
-add_llvm_tool_subdirectory(llvm-symbolizer)
-
-add_llvm_tool_subdirectory(llvm-c-test)
-
-add_llvm_tool_subdirectory(obj2yaml)
-add_llvm_tool_subdirectory(yaml2obj)
 
 add_llvm_tool_subdirectory(llvm-go)
 
 add_llvm_tool_subdirectory(llvm-pdbdump)
 
+if(LLVM_BUILD_UTILS)
+  add_llvm_tool_subdirectory(llvm-dis)
+  add_llvm_tool_subdirectory(llvm-extract)
+  add_llvm_tool_subdirectory(llvm-diff)
+  add_llvm_tool_subdirectory(macho-dump)
+  add_llvm_tool_subdirectory(llvm-rtdyld)
+  add_llvm_tool_subdirectory(dsymutil)
+  add_llvm_tool_subdirectory(llvm-vtabledump)
+  if( LLVM_USE_INTEL_JITEVENTS )
+    add_llvm_tool_subdirectory(llvm-jitlistener)
+  else()
+    ignore_llvm_tool_subdirectory(llvm-jitlistener)
+  endif( LLVM_USE_INTEL_JITEVENTS )
+  add_llvm_tool_subdirectory(bugpoint)
+  add_llvm_tool_subdirectory(bugpoint-passes)
+  add_llvm_tool_subdirectory(llvm-bcanalyzer)
+  add_llvm_tool_subdirectory(llvm-stress)
+  add_llvm_tool_subdirectory(llvm-mcmarkup)
+  add_llvm_tool_subdirectory(verify-uselistorder)
+  add_llvm_tool_subdirectory(llvm-symbolizer)
+  add_llvm_tool_subdirectory(llvm-c-test)
+  add_llvm_tool_subdirectory(obj2yaml)
+  add_llvm_tool_subdirectory(yaml2obj)
+else()
+  ignore_llvm_tool_subdirectory(llvm-dis)
+  ignore_llvm_tool_subdirectory(llvm-extract)
+  ignore_llvm_tool_subdirectory(llvm-diff)
+  ignore_llvm_tool_subdirectory(macho-dump)
+  ignore_llvm_tool_subdirectory(llvm-rtdyld)
+  ignore_llvm_tool_subdirectory(dsymutil)
+  ignore_llvm_tool_subdirectory(llvm-vtabledump)
+  ignore_llvm_tool_subdirectory(llvm-jitlistener)
+  ignore_llvm_tool_subdirectory(bugpoint)
+  ignore_llvm_tool_subdirectory(bugpoint-passes)
+  ignore_llvm_tool_subdirectory(llvm-bcanalyzer)
+  ignore_llvm_tool_subdirectory(llvm-stress)
+  ignore_llvm_tool_subdirectory(llvm-mcmarkup)
+  ignore_llvm_tool_subdirectory(verify-uselistorder)
+  ignore_llvm_tool_subdirectory(llvm-symbolizer)
+  ignore_llvm_tool_subdirectory(llvm-c-test)
+  ignore_llvm_tool_subdirectory(obj2yaml)
+  ignore_llvm_tool_subdirectory(yaml2obj)
+endif()
+
 if(NOT CYGWIN AND LLVM_ENABLE_PIC)
   add_llvm_tool_subdirectory(lto)
   add_llvm_tool_subdirectory(llvm-lto)
