diff -burN clang-3.8.0/CMakeLists.txt clang-3.8.0-arm/CMakeLists.txt
--- clang-3.8.0/CMakeLists.txt	2016-03-31 09:27:45.681490613 -0500
+++ clang-3.8.0-arm/CMakeLists.txt	2016-03-31 09:44:55.403985961 -0500
@@ -504,6 +504,11 @@
   message(FATAL_ERROR "Cannot disable static analyzer while enabling ARCMT")
 endif()
 
+option(CLANG_ENABLE_DIAGTOOL "Build diagtool." ON)
+option(CLANG_ENABLE_CLANGFORMAT "Build clang-format." ON)
+option(CLANG_ENABLE_CLANGFUZZER "Build clang-fuzzer." ON)
+option(CLANG_ENABLE_CINDEXTEST "Build c-index-test." ON)
+
 if(CLANG_ENABLE_ARCMT)
   add_definitions(-DCLANG_ENABLE_ARCMT)
   add_definitions(-DCLANG_ENABLE_OBJC_REWRITER)
diff -burN clang-3.8.0/lib/Basic/Targets.cpp clang-3.8.0-arm/lib/Basic/Targets.cpp
--- clang-3.8.0/lib/Basic/Targets.cpp	2016-03-31 09:27:45.729490916 -0500
+++ clang-3.8.0-arm/lib/Basic/Targets.cpp	2016-03-31 09:46:33.620604891 -0500
@@ -4473,6 +4473,9 @@
         IsAAPCS(true), LDREX(0), HW_FP(0) {
     BigEndian = IsBigEndian;
 
+    // GCC uses this value in ARM targets. Copy GCC behavior for compatibility.
+    this->UserLabelPrefix = "";
+
     switch (getTriple().getOS()) {
     case llvm::Triple::NetBSD:
       PtrDiffType = SignedLong;
@@ -4810,6 +4813,9 @@
         Builder.defineMacro("__ARM_PCS_VFP", "1");
     }
 
+    if (getTriple().isOSBinFormatELF())
+      Builder.defineMacro("__ELF__");
+
     if (SoftFloat)
       Builder.defineMacro("__SOFTFP__");
 
diff -burN clang-3.8.0/tools/CMakeLists.txt clang-3.8.0-arm/tools/CMakeLists.txt
--- clang-3.8.0/tools/CMakeLists.txt	2016-03-31 09:27:45.885491902 -0500
+++ clang-3.8.0-arm/tools/CMakeLists.txt	2016-03-31 09:48:21.449284343 -0500
@@ -1,12 +1,24 @@
 create_subdirectory_options(CLANG TOOL)
 
-add_clang_subdirectory(diagtool)
+if(CLANG_ENABLE_DIAGTOOL)
+  add_subdirectory(diagtool)
+endif()
+
 add_clang_subdirectory(driver)
-add_clang_subdirectory(clang-format)
-add_clang_subdirectory(clang-format-vs)
-add_clang_subdirectory(clang-fuzzer)
 
-add_clang_subdirectory(c-index-test)
+if(CLANG_ENABLE_CLANGFORMAT)
+  add_subdirectory(clang-format)
+  add_subdirectory(clang-format-vs)
+endif()
+
+if(CLANG_ENABLE_CLANGFUZZER)
+  add_subdirectory(clang-fuzzer)
+endif()
+
+if(CLANG_ENABLE_CINDEXTEST)
+  add_subdirectory(c-index-test)
+endif()
+
 add_clang_subdirectory(libclang)
 
 if(CLANG_ENABLE_ARCMT)
