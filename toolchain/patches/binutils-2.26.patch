diff -burN binutils-2.26/gold/binary.cc binutils-2.26-arm/gold/binary.cc
--- binutils-2.26/gold/binary.cc	2016-01-25 02:51:06.000000000 -0600
+++ binutils-2.26-arm/gold/binary.cc	2016-03-24 19:39:38.960861078 -0500
@@ -36,7 +36,11 @@
 // definitions being intact.  So make sure that safe-ctype.h is included
 // only after any C++ system headers, whether directly here (above) or via
 // other local header files (e.g. #include <string> in "binary.h").
+#ifdef __APPLE__
+#include <ctype.h>
+#else
 #include "safe-ctype.h"
+#endif
 
 // Support for reading binary files as input.  These become blobs in
 // the final output.  These files are treated as though they have a
@@ -159,7 +163,11 @@
   for (std::string::iterator p = mangled_name.begin();
        p != mangled_name.end();
        ++p)
+#ifdef __APPLE__
+    if (!isalnum(*p))
+#else
     if (!ISALNUM(*p))
+#endif
       *p = '_';
   mangled_name = "_binary_" + mangled_name;
   std::string start_symbol_name = mangled_name + "_start";
diff -burN binutils-2.26/gold/system.h binutils-2.26-arm/gold/system.h
--- binutils-2.26/gold/system.h	2015-11-13 02:27:42.000000000 -0600
+++ binutils-2.26-arm/gold/system.h	2016-03-24 19:40:30.637250026 -0500
@@ -110,6 +110,8 @@
 #define Unordered_map __gnu_cxx::hash_map
 #define Unordered_multimap __gnu_cxx::hash_multimap
 
+/* Clang libc++ support */
+#if !defined(_LIBCPP_VERSION)
 namespace __gnu_cxx
 {
 
@@ -133,6 +135,8 @@
 
 #define reserve_unordered_map(map, n) ((map)->resize(n))
 
+#endif /* !defined(_LIBCPP_VERSION) */
+
 #else
 
 // The fallback is to just use set and map.
